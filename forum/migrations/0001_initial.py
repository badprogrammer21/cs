# Generated by Django 4.2.5 on 2023-09-22 07:51

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('author', '0001_initial'),
        ('taggit', '0005_auto_20220424_2025'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('slug', models.SlugField(blank=True, max_length=400, unique=True)),
                ('description', models.TextField(default='description')),
            ],
            options={
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('amount_of_replies', models.IntegerField(default=0)),
                ('upvotes', models.IntegerField(default=0)),
                ('able_to_upvote', models.BooleanField(default=True)),
                ('able_to_downvote', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('disliked_by', models.ManyToManyField(related_name='comment_disliked_by', to='author.author')),
                ('liked_by', models.ManyToManyField(related_name='comment_liked_by', to='author.author')),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('upvotes', models.IntegerField(default=0)),
                ('able_to_upvote', models.BooleanField(default=True)),
                ('able_to_downvote', models.BooleanField(default=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('disliked_by', models.ManyToManyField(related_name='reply_disliked_by', to='author.author')),
                ('liked_by', models.ManyToManyField(related_name='reply_liked_by', to='author.author')),
                ('replied_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replied_to', to='author.author')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='author.author')),
            ],
            options={
                'verbose_name_plural': 'replies',
                'ordering': ('date',),
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=400)),
                ('slug', models.CharField(blank=True, max_length=400, unique=True)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('approved', models.BooleanField(default=False)),
                ('upvotes', models.IntegerField(default=0)),
                ('able_to_upvote', models.BooleanField(default=True)),
                ('able_to_downvote', models.BooleanField(default=True)),
                ('categories', models.ManyToManyField(to='forum.category')),
                ('comments', models.ManyToManyField(blank=True, to='forum.comment')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='author.author')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='replies',
            field=models.ManyToManyField(blank=True, to='forum.reply'),
        ),
        migrations.AddField(
            model_name='comment',
            name='sp_post',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='post_comm', to='forum.post'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='author.author'),
        ),
    ]
